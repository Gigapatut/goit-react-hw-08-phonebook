{"version":3,"file":"static/js/150.3b788e4a.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","webpack://react-homework-template/./src/pages/Contacts/Contacts.module.css?fb9d","pages/Contacts/Contacts.jsx"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.data.contacts;\nexport const selectIsLoading = state => state.data.contacts.isLoading;\nexport const selectError = state => state.data.contacts.error;\nexport const selectValueFilter = state => state.sorting.filter;\n\nexport const selectFilteredContacts = createSelector(\n  [selectContacts, selectValueFilter],\n  (contacts, filter) =>\n    contacts.items.filter(el =>\n      el.name.toLowerCase().includes(filter.toLowerCase())\n    )\n);\n\nexport const selectNameContacts = createSelector([selectContacts], contacts =>\n  contacts.items.map(el => el.name)\n);\n","\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\nimport { selectNameContacts } from 'redux/contacts/selectors';\n\n//-------------------------------------------\nimport TextField from '@mui/material/TextField';\nimport { Box } from '@mui/material';\nimport { Button } from '@mui/material';\nimport Typography from '@mui/material/Typography';\n//---------------------------------------------\n\nexport default function ContactForm() {\n  const dispatch = useDispatch();\n  const contactsName = useSelector(selectNameContacts);\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    const form = evt.target;\n    const name = form.elements.name.value;\n    const number = form.elements.phone.value;\n\n    contactsName.includes(name)\n      ? alert(`${name} is already in contacts`)\n      : dispatch(addContact({ name, number }));\n    form.reset();\n  };\n\n  return (\n    <>\n      <Typography\n        variant=\"h6\"\n        noWrap\n        component=\"a\"\n        sx={{\n          display: { xs: 'none', md: 'flex' },\n          mt: 3,\n          fontFamily: 'monospace',\n          fontWeight: 700,\n          letterSpacing: '.2rem',\n          color: 'black',\n          textDecoration: 'none',\n        }}\n      >\n        Enter a new contact\n      </Typography>\n      <form onSubmit={handleSubmit}>\n        <Box sx={{ display: { xs: 'flex', alignItems: 'center', gap: 20 } }}>\n          <div>\n            <TextField\n              label=\"Name\"\n              type=\"text\"\n              name=\"name\"\n              size=\"small\"\n              variant=\"standard\"\n              autoComplete=\"off\"\n              required\n            />\n          </div>\n          <div>\n            <TextField\n              label=\"Number\"\n              type=\"tel\"\n              name=\"phone\"\n              size=\"small\"\n              variant=\"standard\"\n              autoComplete=\"off\"\n              required\n            />\n          </div>\n          <div>\n            <Button\n              variant=\"contained\"\n              type=\"submit\"\n              sx={{ my: 2, color: 'white', display: 'block', ml: 6 }}\n            >\n              Add contact\n            </Button>\n          </div>\n        </Box>\n      </form>\n    </>\n  );\n};\n","import { useDispatch } from 'react-redux';\nimport { updateFilter } from 'redux/contacts/filterSlice';\n\nimport TextField from '@mui/material/TextField';\nimport Typography from '@mui/material/Typography';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const handleChange = evt => {\n    dispatch(updateFilter(evt.target.value));\n  };\n  return (\n    <div>\n      <Typography\n        variant=\"h6\"\n        noWrap\n        component=\"a\"\n        sx={{\n          display: { xs: 'none', md: 'flex' },\n          mt: 2,\n          mb: 2,\n          fontFamily: 'monospace',\n          fontWeight: 700,\n          letterSpacing: '.2rem',\n          color: 'black',\n          textDecoration: 'none',\n        }}\n      >\n        Find contacts by name\n      </Typography>\n      <TextField\n        id=\"standard-basic\"\n        label=\"Input name of contact\"\n        variant=\"standard\"\n        size=\"small\"\n        onChange={handleChange}\n      />\n    </div>\n  );\n};\n\nexport default Filter;\n","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"ContactList_item__EZYHO\",\"DeleteIcon\":\"ContactList_DeleteIcon__HC53F\"};","import { useSelector, useDispatch } from 'react-redux';\nimport css from './ContactList.module.css';\nimport { deleteContact } from 'redux/contacts/operations';\n\nimport { selectFilteredContacts } from 'redux/contacts/selectors';\n\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport Typography from '@mui/material/Typography';\nimport { Box } from '@mui/material';\n\nconst ContactList = () => {\n  const filteredContacts = useSelector(selectFilteredContacts);\n  const dispatch = useDispatch();\n\n  return (\n    <>\n      <Typography\n        variant=\"h6\"\n        noWrap\n        component=\"a\"\n        sx={{\n          display: { xs: 'none', md: 'flex' },\n          mt: 4,\n          mb: 2,\n          fontFamily: 'monospace',\n          fontWeight: 700,\n          letterSpacing: '.2rem',\n          color: 'black',\n          textDecoration: 'none',\n        }}\n      >\n        Contacts list\n      </Typography>\n\n      <ul>\n        {filteredContacts.length > 0 &&\n          filteredContacts.map(({ id, name, number }) => (\n            <li className={css.item}\n              key={id}\n              id={id}\n              name={name}\n              number={number}\n            >\n              <Box\n                sx={{\n                  display: {\n                    xs: 'flex',\n                    alignItems: 'center',\n                    gap: 20,\n                    justifyContent: 'flex-start',\n                  },\n                }}\n              >\n                <Typography>{name}:</Typography>\n              </Box>\n              <Box\n                sx={{\n                  display: {\n                    xs: 'flex',\n                    alignItems: 'center',\n                    gap: 80,\n                    justifyContent: 'space-between',\n                  },\n                }}\n              >\n                <Typography>{number}</Typography>\n                <DeleteIcon className={css.DeleteIcon}\n                  onClick={() => {\n                    dispatch(deleteContact(id));\n                  }}\n                />\n              </Box>\n            </li>\n          ))}\n      </ul>\n    </>\n  );\n};\n\nexport default ContactList;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Contacts_container__WzsIr\"};","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { selectIsLoading, selectError } from 'redux/contacts/selectors';\n\nimport ContactForm from 'components/ContactForm/ContactForm';\nimport Filter from 'components/Filter/Filter';\nimport ContactList from 'components/ContactList/ContactList';\nimport css from './Contacts.module.css';\n\nimport { Watch } from 'react-loader-spinner';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n  return (\n    <div className={css.container}>\n      <ContactForm />\n\n      <Filter />\n      {error && <p>{error}</p>}\n\n      {isLoading && !error && (\n        <b>\n          <Watch\n            height=\"80\"\n             width=\"80\"\n            radius=\"48\"\n            color=\"#4fa94d\"\n            ariaLabel=\"watch-loading\"\n            wrapperStyle={{}}\n            wrapperClassName=\"\"\n            visible={true}\n          />\n        </b>\n      )}\n      <ContactList />\n    </div>\n  );\n};\n\nexport default Contacts;\n"],"names":["selectContacts","state","data","contacts","selectIsLoading","isLoading","selectError","error","selectFilteredContacts","createSelector","sorting","filter","items","el","name","toLowerCase","includes","selectNameContacts","map","ContactForm","dispatch","useDispatch","contactsName","useSelector","Typography","variant","noWrap","component","sx","display","xs","md","mt","fontFamily","fontWeight","letterSpacing","color","textDecoration","onSubmit","evt","preventDefault","form","target","elements","value","number","phone","alert","addContact","reset","Box","alignItems","gap","TextField","label","type","size","autoComplete","required","Button","my","ml","mb","id","onChange","updateFilter","filteredContacts","length","className","css","justifyContent","Delete","onClick","deleteContact","useEffect","fetchContacts","height","width","radius","ariaLabel","wrapperStyle","wrapperClassName","visible"],"sourceRoot":""}